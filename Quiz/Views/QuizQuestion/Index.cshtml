@model IEnumerable<QuizApp.Models.QuizQuestion>


<div class="card text-center">
    <div class="card-body">
        <div class="card-body">
            @using (Html.BeginForm("Search", "QuizQuestion", FormMethod.Get))
            {
                <div class="form-group">
                    <div class="row text-center">
                        <span class="col-md-3">Recherche par Category :</span>
                        @Html.Editor("searchField", new { htmlAttributes = new { @class = "form-control col-md-3" } })
                        <button type="submit" name="submit" value="search" id="submit" class="btn btn-primary"><i class="fa fa-fw fa-search"></i> Rechercher</button>
                    </div>
                </div>
            }
        </div>
        <p>
            @Html.ActionLink("Create New", "Create")
        </p>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Quiz.Subject)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.QstText)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsMultiple)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NumOrdrer)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quiz.Subject)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.QstText)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsMultiple)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NumOrdrer)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }

        </table>

        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @if (ViewBag.Page > 1)
                {
                    <li class="page-item">
                        <a title="Page précédente" class="page-link"
                           href="@Url.Action("Index", new { page = ViewBag.Page - 1, maxByPage=ViewBag.maxByPage, searchField=ViewBag.searchField })" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                <li title="Page en cours" class="page-item active"><a class="page-link" href="#">@ViewBag.Page <span class="sr-only"></span></a></li>

                @if (ViewBag.NextExist == true)
                {
                    <li class="page-item">
                        <a title="Page suivante" class="page-link" href="@Url.Action("Index", new { page = ViewBag.Page + 1, maxByPage=ViewBag.maxByPage, searchField=ViewBag.searchField })" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>

    </div>
</div>